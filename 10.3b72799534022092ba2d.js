"use strict";(self.webpackChunkBlog_System=self.webpackChunkBlog_System||[]).push([[10],{73:(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});var n=s(1),r=s(3),a=s(65),c=s(10),l=s(66);const i=(0,r.lazy)((()=>s.e(9).then(s.bind(s,72)))),o=()=>{const[e,t]=(0,c.tD)(),s=(0,a.C)((e=>e.authReducer.userInfo)),[o,u]=(0,r.useState)({title:"",content:""}),[b,g]=(0,r.useState)({titleError:!1,contentError:!1}),[j,m]=(0,r.useState)(!1),d=(0,r.useRef)(),x=(0,r.useRef)();return(0,r.useEffect)((()=>()=>{setTimeout((()=>{m(!1)}),5e3)}),[j]),(0,n.jsxs)(n.Fragment,{children:[j&&(0,n.jsx)(r.Suspense,Object.assign({fallback:(0,n.jsx)(l.J,{})},{children:(0,n.jsx)(i,{promptText:"發布成功!",onClickCloseBtn:e=>{e.target!==e.currentTarget&&m(!1)}})})),(0,n.jsxs)("form",Object.assign({className:"ml-5 sm:w-96 prose lg:prose-xl",onSubmit:t=>{t.preventDefault(),(null===s.username?(alert("please sign in!"),0):""===o.title?(g(Object.assign(Object.assign({},b),{titleError:!0})),d.current.focus(),0):""!==o.content||(g(Object.assign(Object.assign({},b),{contentError:!0})),x.current.focus(),0))&&(e({userInfo:s,post:o}),u({title:"",content:""}),m(!0))}},{children:[(0,n.jsx)("h2",Object.assign({className:"text-3xl font-bold mt-5"},{children:"發布文章"})),(0,n.jsx)("label",Object.assign({className:"block mb-1"},{children:(0,n.jsx)("input",{type:"text",placeholder:"文章標題",className:"w-full rounded-md p-3 btn "+(b.titleError?"field-warning":"focus-input"),ref:d,value:o.title,onChange:e=>{u(Object.assign(Object.assign({},o),{title:e.currentTarget.value})),g(Object.assign(Object.assign({},b),{titleError:!1}))}})})),(0,n.jsx)("div",Object.assign({className:(b.titleError?"":"invisible")+" text-red-500 text-sm height-[36px] mb-2"},{children:"請輸入標題!"})),(0,n.jsx)("label",Object.assign({className:"block mt-1 mb-1"},{children:(0,n.jsx)("textarea",{cols:30,rows:10,placeholder:"文章內容",className:"w-full rounded-md p-3 btn "+(b.contentError?"field-warning":"focus-input"),ref:x,value:o.content,onChange:e=>{u(Object.assign(Object.assign({},o),{content:e.currentTarget.value})),g(Object.assign(Object.assign({},b),{contentError:!1}))}})})),(0,n.jsx)("div",Object.assign({className:(b.contentError?"":"invisible")+" text-red-500 text-sm height-[36px]  mb-2"},{children:"請輸入內容!"})),(0,n.jsx)("button",Object.assign({className:"post-btn"},{children:"發布"}))]}))]})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,