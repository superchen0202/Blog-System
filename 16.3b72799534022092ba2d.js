"use strict";(self.webpackChunkBlog_System=self.webpackChunkBlog_System||[]).push([[16],{79:(e,t,a)=>{a.r(t),a.d(t,{default:()=>c});var s=a(1),n=a(3),r=a(60);const c=(0,n.memo)((e=>{const{commentState:t}=e,[a,n]=(function(e,t){var a={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(a[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(s=Object.getOwnPropertySymbols(e);n<s.length;n++)t.indexOf(s[n])<0&&Object.prototype.propertyIsEnumerable.call(e,s[n])&&(a[s[n]]=e[s[n]])}}(e,["commentState"]),t),[c]=(0,r.oR)();return(0,s.jsx)("div",Object.assign({className:"lightBox"},{children:(0,s.jsx)("div",Object.assign({className:"container"},{children:(0,s.jsxs)("div",Object.assign({className:"rounded mt-60 mx-auto text-lg"},{children:[(0,s.jsx)("textarea",{rows:2,placeholder:"留言內容",className:"message-text-area",value:a.afterUpdate,onChange:e=>{n(Object.assign(Object.assign({},a),{afterUpdate:e.currentTarget.value}))}}),(0,s.jsxs)("div",Object.assign({className:"flex items-center mr-auto"},{children:[(0,s.jsx)("button",Object.assign({className:"submit-btn mr-1 hover:cursor-pointer",onClick:t=>{if(t.preventDefault(),a.beforeUpdate===a.afterUpdate)return!1===confirm("內容無更新，確認離開頁面?")?void 0:void e.ChangeEditingMode();c({id:e.commentID,content:a.afterUpdate}).unwrap().then((()=>{alert("更新成功!"),e.ChangeEditingMode(),n(Object.assign(Object.assign({},a),{beforeUpdate:a.afterUpdate}))}))}},{children:" 更新"})),(0,s.jsx)("div",Object.assign({className:"grey-text mr-1"},{children:"|"})),(0,s.jsx)("button",Object.assign({className:"submit-btn hover:cursor-pointer",onClick:e.ChangeEditingMode},{children:" 取消"}))]}))]}))}))}))}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,