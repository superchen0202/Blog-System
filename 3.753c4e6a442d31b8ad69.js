"use strict";(self.webpackChunkBlog_System=self.webpackChunkBlog_System||[]).push([[3],{64:(e,s,n)=>{n.r(s),n.d(s,{default:()=>m});var t=n(1),a=n(3),l=n(63),c=n(65),i=n(27),r=n(66);const j=(0,a.lazy)((()=>n.e(4).then(n.bind(n,67)))),d=(0,a.lazy)((()=>n.e(5).then(n.bind(n,68)))),h=(0,a.lazy)((()=>n.e(6).then(n.bind(n,69)))),x=(0,a.lazy)((()=>n.e(7).then(n.bind(n,70)))),o=(0,a.lazy)((()=>n.e(8).then(n.bind(n,71)))),b=(0,a.lazy)((()=>n.e(10).then(n.bind(n,73)))),p=(0,a.lazy)((()=>n.e(11).then(n.bind(n,74)))),m=()=>{const e=(0,c.T)();(0,a.useEffect)((()=>{(0,i.bW)()&&e((0,i.ts)())}),[e]);const s=[{path:"/",element:(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(r.J,{})},{children:(0,t.jsx)(j,{})})),children:[{index:!0,element:(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(r.J,{})},{children:(0,t.jsx)(d,{})}))},{path:"/posts/:id",element:(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(r.J,{})},{children:(0,t.jsx)(h,{})}))},{path:"/:username/posts/edit",element:(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(r.J,{})},{children:(0,t.jsx)(x,{})}))},{path:"/:username/posts/edit/:id",element:(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(r.J,{})},{children:(0,t.jsx)(o,{})}))},{path:"/post-editor",element:(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(r.J,{})},{children:(0,t.jsx)(b,{})}))},{path:"/login",element:(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(r.J,{})},{children:(0,t.jsx)(p,{})}))}]},{path:"*",element:(0,t.jsx)("div",{children:"404 NOT Found X_X"})}];return(0,l.V$)(s)}},66:(e,s,n)=>{n.d(s,{J:()=>a,Q:()=>l});var t=n(1);const a=()=>(0,t.jsx)("div",Object.assign({className:"flex justify-center items-center"},{children:(0,t.jsxs)("svg",Object.assign({className:"animate-spin h-10 w-10 text-gray-400",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},{children:[(0,t.jsx)("circle",{className:"opacity-25",cx:"12",cy:"12",r:"10",stroke:"currentColor",strokeWidth:"4"}),(0,t.jsx)("path",{className:"opacity-75",fill:"currentColor",d:"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"})]}))})),l=e=>{const{message:s="OOPS! There is something wrong X_X Please reload page again."}=e;return(0,t.jsx)("div",Object.assign({className:"mt-4 text-red-600"},{children:s}))}},65:(e,s,n)=>{n.d(s,{C:()=>l,T:()=>a});var t=n(12);const a=()=>(0,t.I0)(),l=t.v9}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,