"use strict";(self.webpackChunkBlog_System=self.webpackChunkBlog_System||[]).push([[4],{67:(e,s,a)=>{a.r(s),a.d(s,{default:()=>h});var n=a(1),i=a(63),r=a(61),t=a(12),c=a(65),l=a(27);const m=(0,a(3).memo)((e=>{const{path:s,pageName:a}=e;return(0,n.jsx)("li",{children:(0,n.jsx)(r.OL,Object.assign({to:s,className:({isActive:e})=>e?"navbar-item navbar-item-active":"navbar-item"},{children:a}))})}));var j=a(66);const d=()=>{const{userInfo:e,isLoading:s}=(0,c.C)((e=>({userInfo:e.authReducer.userInfo,isLoading:e.authReducer.isLoading})),t.wU),a=(0,c.T)(),d=(0,i.s0)(),h=[{pageName:"新聞快報",path:"/"},{pageName:"文章列表",path:`/${e.username}/posts/edit`},{pageName:"發布文章",path:"/post-editor"}];return(0,n.jsx)("header",Object.assign({className:"navbar-header"},{children:(0,n.jsxs)("div",Object.assign({className:"navbar-container lg:max-w-[1024px] lg:mx-auto lg:px-0"},{children:[(0,n.jsx)("div",Object.assign({className:"w-[100px] cursor-pointer"},{children:(0,n.jsx)("h1",Object.assign({className:"m-0"},{children:(0,n.jsx)(r.rU,Object.assign({to:"/",className:"navbar-item"},{children:"新聞快報"}))}))})),(0,n.jsxs)("ul",Object.assign({className:"flex items-center"},{children:[h.map(((e,s)=>(0,n.jsx)(m,Object.assign({},e),s))),s?(0,n.jsx)(j.J,{}):(0,n.jsxs)(n.Fragment,{children:[e.username&&(0,n.jsx)("li",{children:(0,n.jsx)("button",Object.assign({className:"navbar-item",onClick:s=>{s.preventDefault(),!1!==confirm(`${e.username}確認登出?`)&&((0,l.dZ)(),a((0,l.l7)()),d("/login"))}},{children:"登出"}))}),!e.username&&(0,n.jsx)("li",{children:(0,n.jsx)(r.OL,Object.assign({to:"/login",className:({isActive:e})=>e?"navbar-item navbar-item-active":"navbar-item"},{children:"登入"}))}),e.username&&(0,n.jsx)("li",{children:(0,n.jsx)("p",Object.assign({className:"navbar-item"},{children:e.username}))})]})]}))]}))}))},h=()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(d,{}),(0,n.jsx)("div",Object.assign({className:"container"},{children:(0,n.jsx)(i.j3,{})}))]})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,