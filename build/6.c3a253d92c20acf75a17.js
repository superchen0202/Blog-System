"use strict";(self.webpackChunkBlog_System=self.webpackChunkBlog_System||[]).push([[6],{69:(e,s,n)=>{n.r(s),n.d(s,{default:()=>b});var t=n(1),a=n(3),c=n(63),r=n(65),l=n(10),d=n(60),i=n(66);const h=(0,a.lazy)((()=>n.e(13).then(n.bind(n,76)))),j=(0,a.lazy)((()=>n.e(14).then(n.bind(n,77)))),u=(0,a.lazy)((()=>n.e(15).then(n.bind(n,78)))),b=()=>{const e=(0,c.UO)().id,s=(0,r.C)((e=>e.authReducer.userInfo)),{data:n,error:b}=(0,l.mr)(`id=${e}`,{refetchOnMountOrArgChange:!0}),{data:g,error:m}=(0,d.y8)(`postID=${e}`,{refetchOnMountOrArgChange:!0}),[o,x]=(0,a.useState)([]),f=(0,a.useCallback)((e=>{x((s=>s.concat(e)))}),[]),O=(0,a.useCallback)(((e=-1)=>{x((s=>s.slice(0,s.findIndex((s=>s.id===e))).concat(s.slice(s.findIndex((s=>s.id===e))+1,s.length))))}),[]);return(0,a.useEffect)((()=>(g&&x((e=>e.concat(g))),()=>{x((e=>[]))})),[g]),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(i.J,{})},{children:null==n?void 0:n.map((e=>(0,t.jsx)(h,Object.assign({},e),e.id)))})),b&&(0,t.jsx)(i.Q,{}),(0,t.jsxs)("div",Object.assign({className:"mb-10"},{children:[(0,t.jsxs)("h1",Object.assign({className:"text-center mb-4"},{children:["用戶回應(",o.length,") "]})),m&&(0,t.jsx)(i.Q,{message:"X_X"}),(0,t.jsx)(a.Suspense,Object.assign({fallback:(0,t.jsx)(i.J,{})},{children:o.map((e=>(0,t.jsx)(j,Object.assign({},e,{currentUser:s,DeleteSelectedComment:O}),e.id)))})),(0,t.jsx)("div",Object.assign({className:"mb-10"},{children:(0,t.jsx)(u,{postID:e,currentUser:s,AddNewComment:f})}))]}))]})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,